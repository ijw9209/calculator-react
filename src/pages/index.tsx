import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { Counter } from '../features/counter/Counter'
import { Product } from '../features/product/Product'; 
import { BankList } from '../features/bankList/BankList';
import { DepositList } from '../features/deposit/DepositList';
import type { NextPage, InferGetServerSidePropsType, GetServerSideProps } from 'next';
import { decrement, increment } from '../features/counter/counterSlice';
import wrapper from '../app/store';

import React, { ReactNode, useEffect, useState } from 'react'

import { useMediaQuery } from "react-responsive";

import Link from 'next/link';


const Home: NextPage = (props: InferGetServerSidePropsType<typeof getServerSideProps>) => {

  
  const [element, setElement] = useState<HTMLElement | null>(null);

  // const isDesktop:boolean = useMediaQuery({ minWidth: 992 })
  // const isTablet:boolean = useMediaQuery({ minWidth: 768, maxWidth: 991 })
  const isMobile:boolean = useMediaQuery({ maxWidth: 767 })
  // const isNotMobile:boolean = useMediaQuery({ minWidth: 768 })
   // Hydration failed because the initial UI does not match what was rendered on the server.
    // 에러로 인해 추가
  //   if (!element) {
  //     return <></>;
  //  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <Counter ></Counter> */}
      <div className={styles.contentWrap}>
        <div className={styles.leftContent}>
          <BankList></BankList>
          {/* <Product ></Product> */}
        </div>
        <div className={styles.rightContent}>
          <DepositList></DepositList>
          
        </div>
      </div>  
{/* 
      {isDesktop && <div>Desktop or laptop</div>}
      {isTablet && <div>Tablet</div>}
      {isMobile && <div>Mobile</div>}
      {isNotMobile && <div>Not mobile (desktop or laptop or tablet)</div>} */}

      {/* {isDesktop && <div>Desktop or laptop</div>}
      {isTablet && <div>Tablet</div>}
      {isMobile && <div>Mobile</div>}
      {isNotMobile && <div>Not mobile (desktop or laptop or tablet)</div>} */}

      {/*  */}

      {/* <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main> */}

      {/* <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer> */}
    </div>
  )
}

// SSR: 서버에서 구동되는 영역
export const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps((store) => async (context) => {

  // 서버 영역에서 Redux 사용
  store.dispatch(increment());
  store.dispatch(decrement());

  return { props: { message: 'Message from SSR' } };
});


export default Home;



//Hydration failed because the initial UI does not match what was rendered on the server.